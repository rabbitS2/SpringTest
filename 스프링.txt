스프링.txt

 - 스프링 웹프로젝트 구성
   1) Presentation Layer(tier) : UI 담당영역 / 웹-모바일을 구분하는 계층
     => jsp(view) / html,css,js
     => controller
   
   2) Business Logic Layer : 서비스계층, 고객의 요구사항을 반영하는 계층(기능적 구현)
     => Service(Model의 역활)
   
   3) Data Access Layer : Persistence Layer / DB 데이터 처리계층
     => DAO
     => MyBatis
   4) DB
     => Mysql
     
    
      https://mybatis.org/mybatis-3/ko/index.html
    * MyBatis : DB와 DAO 객체 사이에서 효율적인 데이터 처리를 위한 프레임워크
         (SQL Mapper 라이브러리)
      
      - 간결한 코드처리 : 예외처리, pstmt,rs 객체를 처리 
      - SQL 구문을 분리 : xml/에노테이션을 사용한 처리 가능
      - spring과 자동연동
      - 동적 SQL 사용가능
        
    
   
   * MyBatis - 스프링연동 처리 객체 
    => SqlSessionFactory 객체 : 디비연결, SQL 실행관련 동작 
     => SqlSessionFactoryBean 클래스를 사용해서 해당객체를 생성
    
    
   
   * 스프링 MVC( model2 방식 )
   
   
    [기존 MVC]
    
    요청 -> Controller <-> Model  <-> DB
              | |
              View
              
   [Front Controller 패턴을 사용한 MVC]
   => 위임(Delegation)동작을 통해서 일부컨트롤러를 분리해서 사용
   
   요청 ->   Front     <->  Controller  <-> Model <-> DB
          Controller
             |  |
             View 
             
   [Spring]          
                         |                                             |
   요청 ->   Front     <->|  Controller  <-> Service(Model) <-> DAO <-> |MyBatis <-> DB
          Controller     |                                             |
             |  |        |                                             |
             View        |                                             |
                         |             SPRING MVC                      |
   
    

  * 스프링MVC 처리하는 작업
   - URI를 분석해서 적당한 컨트롤러를 매핑
   - 컨트롤러에 필요한 메서드 호출
   - 컨트롤러의 결과데이터를 뷰로 전달하는 작업
   - 처리에 따른 적절한 뷰 연결 
   
   - 파라미터의 수집
  
  * 개발자가 처리해야하는 작업
   - 특정 URI에 해당하는 컨트롤러 생성
   - 서비스 객체를 생성
   - DAO 객체의 생성
   - 컨트롤로의 처리를 담당하는 메서드 생성
   - 뷰에서 전달받은 데이터 출력
  
  
  
  
    
    
    
    
    
   CREATE TABLE `springdb`.`tbl_member` (
  `userid` VARCHAR(50) NOT NULL,
  `userpw` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `useremail` VARCHAR(200) NULL,
  `regdate` TIMESTAMP NULL DEFAULT now(),
  `updatedate` TIMESTAMP NULL DEFAULT now(),
  PRIMARY KEY (`userid`));
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
     
     
     